{"version":3,"sources":["spotify.js","Login.js","SidebarOption.js","DataLayer.js","Sidebar.js","Header.js","SongRow.js","Body.js","Footer.js","Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","console","log","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","playSong","onClick","id","album","artists","artist","Body","spotify","discover_weekly","dispatch","play","uris","then","res","getMyCurrentPlayingTrack","r","item","playing","description","context_uri","fontSize","tracks","Footer","useEffect","getMyCurrentPlaybackState","is_playing","handlePlayPause","pause","skipToNext","skipToPrevious","Grid","container","spacing","xs","Slider","aria-labelledby","Player","SpotifyWebApi","App","token","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","getMyTopArtists","response","top_artists","getUserPlaylists","getPlaylist","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2bfcabfd.chunk.js","sourcesContent":["// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\n\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\nconst redirectUri = \"http://spotify-clone-yash.web.app/\";\nconst clientId = \"1f6b27b71a7c47d3886c752c3cebfd6f\";\n\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const getTokenFromUrl = () => {\n  //pulling the accessToken\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      // it will split key value pairs of uri params\n      // #accessToken=mysupersecuritykey&name=sonny&app=spotify\n      let parts = item.split(\"=\");\n      //grabs accesstoken\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n      return initial;\n    }, {});\n};\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport \"./Login.css\";\nimport { loginUrl } from \"./spotify\";\nfunction Login() {\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"\"\n      ></img>\n      <a href={loginUrl}> LOGIN WITH SPOTIFY</a>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"./SidebarOption.css\";\n\nfunction SidebarOption({ title, Icon }) {\n  return (\n    <div className=\"sidebarOption\">\n      {/* if there is icon then render the icon */}\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\n      {Icon ? <h4> {title}</h4> : <p> {title}</p>}\n    </div>\n  );\n}\n\nexport default SidebarOption;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({ initialState, reducer, children }) => (\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </DataLayerContext.Provider>\n);\n\nexport const useDataLayerValue = () => useContext(DataLayerContext);\n","import React from \"react\";\nimport \"./Sidebar.css\";\nimport SidebarOption from \"./SidebarOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nfunction Sidebar() {\n  const [{ playlists }, dispatch] = useDataLayerValue();\n  console.log(playlists);\n\n  return (\n    <div className=\"sidebar\">\n      <img\n        className=\"sidebar__logo\"\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"\"\n      />\n      <SidebarOption Icon={HomeIcon} title=\"Home\" />\n      <SidebarOption Icon={SearchIcon} title=\"Search\" />\n      <SidebarOption Icon={LibraryMusicIcon} title=\"Your Library\" />\n      <br></br>\n      <strong className=\"sidebar__title\">PLAYLISTS</strong>\n      <hr />\n      {playlists?.items?.map((playlist) => (\n        <SidebarOption title={playlist.name} />\n      ))}\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./Header.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nfunction Header() {\n  const [{ user }, dispatch] = useDataLayerValue();\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <SearchIcon />\n        <input\n          placeholder=\"Search for Artists, Songs, or Podcasts \"\n          type=\"text\"\n        />\n      </div>\n      <div className=\"header__right\">\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\n        <h4> {user?.display_name}</h4>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./SongRow.css\";\nfunction SongRow({ track, playSong }) {\n  return (\n    <div className=\"songRow\" onClick={() => playSong(track.id)}>\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\n      <div className=\"songRow__info\">\n        <h1>{track.name}</h1>\n        <p>\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\n          {track.album.name}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SongRow;\n","import React from \"react\";\nimport \"./Body.css\";\nimport Header from \"./Header\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport SongRow from \"./SongRow\";\n\nfunction Body({ spotify }) {\n  const [{ discover_weekly }, dispatch] = useDataLayerValue();\n  const playPlaylist = (id) => {\n    spotify\n      .play({\n        context_uri: `spotify:playlist:37i9dQZEVXcJZyENOWUFo7`,\n      })\n      .then((res) => {\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          });\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          });\n        });\n      });\n  };\n\n  const playSong = (id) => {\n    spotify\n      .play({\n        uris: [`spotify:track:${id}`],\n      })\n      .then((res) => {\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          });\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          });\n        });\n      });\n  };\n\n  return (\n    <div className=\"body\">\n      <Header spotify={spotify} />\n      <div className=\"body__info\">\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\n        <div className=\"body__infoText\">\n          <strong>PLAYLIST</strong>\n          <h2>Daily Mix</h2>\n          <p>{discover_weekly?.description}</p>\n        </div>\n      </div>\n      <div className=\"body__songs\">\n        <div className=\"body__icons\">\n          <PlayCircleFilledIcon\n            className=\"body__shuffle\"\n            onClick={playPlaylist}\n          />\n          <FavoriteIcon fontSize=\"large\" />\n          <MoreHorizIcon />\n        </div>\n        {discover_weekly?.tracks.items.map((item) => (\n          <SongRow playSong={playSong} track={item.track} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Body;\n","import React, { useEffect } from \"react\";\nimport \"./Footer.css\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport { Grid, Slider } from \"@material-ui/core\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nfunction Footer({ spotify }) {\n  const [{ item, playing }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    spotify.getMyCurrentPlaybackState().then((r) => {\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: r.is_playing,\n      });\n\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n    });\n  }, [spotify]);\n\n  const handlePlayPause = () => {\n    if (playing) {\n      spotify.pause();\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: false,\n      });\n    } else {\n      spotify.play();\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n    }\n  };\n\n  const skipNext = () => {\n    spotify.skipToNext();\n    spotify.getMyCurrentPlayingTrack().then((r) => {\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n    });\n  };\n\n  const skipPrevious = () => {\n    spotify.skipToPrevious();\n    spotify.getMyCurrentPlayingTrack().then((r) => {\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n    });\n  };\n\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__left\">\n        <img\n          className=\"footer__albumLogo\"\n          src={item?.album.images[0].url}\n          alt={item?.name}\n        />\n        {item ? (\n          <div className=\"footer__songInfo\">\n            <h4>{item.name}</h4>\n            <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\n          </div>\n        ) : (\n          <div className=\"footer__songInfo\">\n            <h4>No song is playing</h4>\n            <p>...</p>\n          </div>\n        )}\n      </div>\n      <div className=\"footer__center\">\n        <ShuffleIcon className=\"footer__green\" />\n        <SkipPreviousIcon onClick={skipNext} className=\"footer__icon\" />\n        {playing ? (\n          <PauseCircleOutlineIcon\n            onClick={handlePlayPause}\n            fontSize=\"large\"\n            className=\"footer__icon\"\n          />\n        ) : (\n          <PlayCircleOutlineIcon\n            onClick={handlePlayPause}\n            fontSize=\"large\"\n            className=\"footer__icon\"\n          />\n        )}\n        <SkipNextIcon onClick={skipPrevious} className=\"footer__icon\" />\n        <RepeatIcon className=\"footer__green\" />\n      </div>\n      <div className=\"footer__right\">\n        <Grid container spacing={2}>\n          <Grid item>\n            <PlaylistPlayIcon />\n          </Grid>\n          <Grid item>\n            <VolumeDownIcon />\n          </Grid>\n          <Grid item xs>\n            <Slider aria-labelledby=\"continuous-slider\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./Player.css\";\nimport Sidebar from \"./Sidebar\";\nimport Body from \"./Body\";\nimport Footer from \"./Footer\";\n\nfunction Player({ spotify }) {\n  return (\n    <div className=\"player\">\n      <div className=\"player__body\">\n        <Sidebar />\n        <Body spotify={spotify} />\n      </div>\n      <Footer spotify={spotify} />\n    </div>\n  );\n}\n\nexport default Player;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./Player\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  //dispatch is like a gun that shoots the data layer to update its state\n  //we are using contextAPI and dispatch instead of UseState\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  //run code based on a given condition i.e[]\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    //to remove the access token for security kinda reasons\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      spotify.setAccessToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.getMe().then((user) => {\n        // console.log(\"HeyCONSOLE\", user);\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n\n      spotify.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify,\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist(\"37i9dQZF1E35eDOvHxcwPw\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n    }\n    //console.log(\"I Have A Token \", token);\n  }, [token, dispatch]);\n\n  return (\n    //BEM\n    <div className=\"App\">\n      {\n        // if there is a token start the player or redirect to login page\n        token ? <Player spotify={spotify} /> : <Login />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\n  user: null,\n  //remove after development\n  //token: \"1f6b27b71a7c47d3886c752c3cebfd6f\",\n  playlists: [],\n  spotify: null,\n  discover_weekly: null,\n  top_artists: null,\n  playing: false,\n  item: null,\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n  //Action -> type, [payload]\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n\n    case \"SET_PLAYING\":\n      return {\n        ...state,\n        playing: action.playing,\n      };\n\n    case \"SET_ITEM\":\n      return {\n        ...state,\n        item: action.item,\n      };\n\n    case \"SET_DISCOVER_WEEKLY\":\n      return {\n        ...state,\n        discover_weekly: action.discover_weekly,\n      };\n\n    case \"SET_TOP_ARTISTS\":\n      return {\n        ...state,\n        top_artists: action.top_artists,\n      };\n\n    case \"SET_TOKEN\":\n      return {\n        ...state,\n        token: action.token,\n      };\n\n    case \"SET_SPOTIFY\":\n      return {\n        ...state,\n        spotify: action.spotify,\n      };\n\n    case \"SET_PLAYLISTS\":\n      return {\n        ...state,\n        playlists: action.playlists,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { DataLayer } from \"./DataLayer\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}