{"ast":null,"code":"var _jsxFileName = \"/Users/yash/Desktop/Spotify Clone/spotify-clone/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./Player\";\nimport { useDataLayerValue } from \"./DataLayer\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [token, setToken] = useState(null); //dispatch is like a gun that shoots the data layer to update its state\n\n  const [{}, dispatch] = useDataLayerValue(); //run code based on a given condition i.e[]\n\n  useEffect(() => {\n    const hash = getTokenFromUrl(); //to remove the access token for security kinda reasons\n\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token);\n      dispatch({\n        type: \"SET_USER\",\n        user: user\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        console.log(\"HeyUSHD\", user);\n      });\n    } //console.log(\"I Have A Token \", token);\n\n  }, []);\n  return (\n    /*#__PURE__*/\n    //BEM\n    React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, // if there is a token start the player or redirect to login page\n    token ? /*#__PURE__*/React.createElement(Player, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 30\n      }\n    }))\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yash/Desktop/Spotify Clone/spotify-clone/src/App.js"],"names":["React","useState","useEffect","Login","getTokenFromUrl","SpotifyWebApi","Player","useDataLayerValue","spotify","App","token","setToken","dispatch","hash","window","location","_token","access_token","type","user","setAccessToken","getMe","then","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,iBAAT,QAAkC,aAAlC;AAEA,MAAMC,OAAO,GAAG,IAAIH,aAAJ,EAAhB;;AAEA,SAASI,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC,CADa,CAEb;;AACA,QAAM,CAAC,EAAD,EAAKW,QAAL,IAAiBL,iBAAiB,EAAxC,CAHa,CAIb;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,IAAI,GAAGT,eAAe,EAA5B,CADc,CAEd;;AACAU,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAID,MAAJ,EAAY;AACVL,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACAJ,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,UADC;AAEPC,QAAAA,IAAI,EAAEA;AAFC,OAAD,CAAR;AAIAX,MAAAA,OAAO,CAACY,cAAR,CAAuBJ,MAAvB;AACAR,MAAAA,OAAO,CAACa,KAAR,GAAgBC,IAAhB,CAAsBH,IAAD,IAAU;AAC7BI,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,IAAvB;AACD,OAFD;AAGD,KAhBa,CAiBd;;AACD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AACAT,IAAAA,KAAK,gBAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHzB;AAFF;AASD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./Player\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  //dispatch is like a gun that shoots the data layer to update its state\n  const [{}, dispatch] = useDataLayerValue();\n  //run code based on a given condition i.e[]\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    //to remove the access token for security kinda reasons\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token);\n      dispatch({\n        type: \"SET_USER\",\n        user: user,\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        console.log(\"HeyUSHD\", user);\n      });\n    }\n    //console.log(\"I Have A Token \", token);\n  }, []);\n\n  return (\n    //BEM\n    <div className=\"app\">\n      {\n        // if there is a token start the player or redirect to login page\n        token ? <Player /> : <Login />\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}