{"ast":null,"code":"var _jsxFileName = \"/Users/yash/Desktop/Spotify Clone/spotify-clone/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [token, setToken] = useState(null); //run code based on a given condition i.e[]\n\n  useEffect(() => {\n    const hash = getTokenFromUrl(); //to remove the access token for security kinda reasons\n\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token);\n    } //console.log(\"I Have A Token \", token);\n\n  }, []);\n  return (\n    /*#__PURE__*/\n    //BEM\n    React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, // if there is a token start the player or redirect to login page\n    token ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"I am logged in\") : /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 43\n      }\n    }))\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yash/Desktop/Spotify Clone/spotify-clone/src/App.js"],"names":["React","useState","useEffect","Login","getTokenFromUrl","SpotifyWebApi","spotify","App","token","setToken","hash","window","location","_token","access_token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AAEA,MAAMC,OAAO,GAAG,IAAID,aAAJ,EAAhB;;AAEA,SAASE,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC,CADa,CAEb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,IAAI,GAAGN,eAAe,EAA5B,CADc,CAEd;;AACAO,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAID,MAAJ,EAAY;AACVJ,MAAAA,QAAQ,CAACI,MAAD,CAAR;AACD,KARa,CASd;;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AACAL,IAAAA,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,gBAA6B,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHtC;AAFF;AASD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  //run code based on a given condition i.e[]\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    //to remove the access token for security kinda reasons\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token);\n    }\n    //console.log(\"I Have A Token \", token);\n  }, []);\n\n  return (\n    //BEM\n    <div className=\"app\">\n      {\n        // if there is a token start the player or redirect to login page\n        token ? <h1>I am logged in</h1> : <Login />\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}