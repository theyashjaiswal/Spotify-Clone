{"ast":null,"code":"import _slicedToArray from\"/Users/yash/Desktop/Spotify Clone/spotify-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import\"./App.css\";import Login from\"./Login\";import{getTokenFromUrl}from\"./spotify\";import SpotifyWebApi from\"spotify-web-api-js\";import Player from\"./Player\";import{useDataLayerValue}from\"./DataLayer\";var spotify=new SpotifyWebApi();function App(){//dispatch is like a gun that shoots the data layer to update its state\n//we are using contextAPI and dispatch instead of UseState\nvar _useDataLayerValue=useDataLayerValue(),_useDataLayerValue2=_slicedToArray(_useDataLayerValue,2),_useDataLayerValue2$=_useDataLayerValue2[0],user=_useDataLayerValue2$.user,token=_useDataLayerValue2$.token,dispatch=_useDataLayerValue2[1];//run code based on a given condition i.e[]\nuseEffect(function(){var hash=getTokenFromUrl();//to remove the access token for security kinda reasons\nwindow.location.hash=\"\";var _token=hash.access_token;if(_token){dispatch({type:\"SET_TOKEN\",token:_token});spotify.setAccessToken(_token);spotify.getMe().then(function(user){// console.log(\"HeyCONSOLE\", user);\ndispatch({type:\"SET_USER\",user:user});});}//console.log(\"I Have A Token \", token);\n},[token,dispatch]);return/*#__PURE__*/ (//BEM\nReact.createElement(\"div\",{className:\"App\"},// if there is a token start the player or redirect to login page\ntoken?/*#__PURE__*/React.createElement(Player,{spotify:spotify}):/*#__PURE__*/React.createElement(Login,null)));}export default App;","map":{"version":3,"sources":["/Users/yash/Desktop/Spotify Clone/spotify-clone/src/App.js"],"names":["React","useEffect","Login","getTokenFromUrl","SpotifyWebApi","Player","useDataLayerValue","spotify","App","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,eAAT,KAAgC,WAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,iBAAT,KAAkC,aAAlC,CAEA,GAAMC,CAAAA,OAAO,CAAG,GAAIH,CAAAA,aAAJ,EAAhB,CAEA,QAASI,CAAAA,GAAT,EAAe,CACb;AACA;AAFa,uBAGuBF,iBAAiB,EAHxC,sGAGJG,IAHI,sBAGJA,IAHI,CAGEC,KAHF,sBAGEA,KAHF,CAGWC,QAHX,wBAKb;AACAV,SAAS,CAAC,UAAM,CACd,GAAMW,CAAAA,IAAI,CAAGT,eAAe,EAA5B,CACA;AACAU,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CAAuB,EAAvB,CACA,GAAIG,CAAAA,MAAM,CAAGH,IAAI,CAACI,YAAlB,CAEA,GAAID,MAAJ,CAAY,CACVJ,QAAQ,CAAC,CACPM,IAAI,CAAE,WADC,CAEPP,KAAK,CAAEK,MAFA,CAAD,CAAR,CAIAR,OAAO,CAACW,cAAR,CAAuBH,MAAvB,EACAR,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAqB,SAACX,IAAD,CAAU,CAC7B;AACAE,QAAQ,CAAC,CACPM,IAAI,CAAE,UADC,CAEPR,IAAI,CAAJA,IAFO,CAAD,CAAR,CAID,CAND,EAOD,CACD;AACD,CArBQ,CAqBN,CAACC,KAAD,CAAQC,QAAR,CArBM,CAAT,CAuBA,oBACE;AACA,2BAAK,SAAS,CAAC,KAAf,EAEI;AACAD,KAAK,cAAG,oBAAC,MAAD,EAAQ,OAAO,CAAEH,OAAjB,EAAH,cAAkC,oBAAC,KAAD,MAH3C,CAFF,EASD,CAED,cAAeC,CAAAA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./Player\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  //dispatch is like a gun that shoots the data layer to update its state\n  //we are using contextAPI and dispatch instead of UseState\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  //run code based on a given condition i.e[]\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    //to remove the access token for security kinda reasons\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        // console.log(\"HeyCONSOLE\", user);\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n    }\n    //console.log(\"I Have A Token \", token);\n  }, [token, dispatch]);\n\n  return (\n    //BEM\n    <div className=\"App\">\n      {\n        // if there is a token start the player or redirect to login page\n        token ? <Player spotify={spotify} /> : <Login />\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}